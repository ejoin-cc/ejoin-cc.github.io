import{_ as e,c as a,a as s,o as l}from"./app-DN92ejy5.js";const t={};function p(o,n){return l(),a("div",null,n[0]||(n[0]=[s(`<h1 id="ddns" tabindex="-1"><a class="header-anchor" href="#ddns"><span>DDNS</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>假如我们现在使用一台本地服务器并部署了一些服务，如果其他客户端和服务器在同一个子网内，可以直接使用内网 IP 直接访问到服务上去。如果我们要想外部访问到本地服务器，这个服务器需要有公网 IP 地址来作为唯一标识。而公网 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 地址范围很大，一般现在的家庭宽带和路由器都支持设备获取公网 IPv6，我们可以使用它来访问服务器。但是设备分配到的公网 IPv6 经常会变化，使用起来不是很方便。我们可以购买一个固定的域名，将域名解析到服务器的公网 IPv6 上，使用 DDNS 服务，当公网 IPv6 发生变化时，自动修改域名解析记录，这样就可以一直使用不变的域名来进行访问，不需要频繁手动配置。</p><h2 id="前提" tabindex="-1"><a class="header-anchor" href="#前提"><span>前提</span></a></h2><ol><li>服务器具有 IPv6 公网地址（宽带支持时，可以通过桥接光猫，路由器打开 IPv6 开关实现，注意如果需要外网访问的话，需要调整 IPv6 防火墙）。</li><li>拥有一个域名（以下使用 Cloudflare 购买的域名和 DNS 解析）。</li></ol><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="接入-cloudflare" tabindex="-1"><a class="header-anchor" href="#接入-cloudflare"><span>接入 Cloudflare</span></a></h3><p>首先注册登录 <a href="https://www.cloudflare-cn.com" target="_blank" rel="noopener noreferrer">Cloudflare</a> 账号，然后添加站点，输入购买的域名。Cloudflare 提供多种不同的订阅计划，当前使用免费的计划足以满足要求。此时系统可能会自动解析并导入现存的 DNS 记录，可以根据需要保留或删除。</p><p>信息填写提交完毕后，Cloudflare 会提供两个名称服务器的地址，如果域名不是在 Cloudflare 处购买的，需要在域名注册商位置进行修改（查询对应域名注册商的文档进行修改）。通常名称服务器的更改最多需要 24 小时才能完全生效，一旦生效，Cloudflare 会通过邮件进行通知。</p><p>收到邮件通知后，可以在 Cloudflare 上继续验证域名服务器。如果服务器提供的服务使用 SSL 证书并启用了 HTTPS，建议开启 HTTPS 重写，并在 SSL/TLS 设置中将模式设置为「完全」，如果设置为更高级别的模式会增加 SSL 的响应时间。</p><p>然后我们需要创建 <a href="https://dash.cloudflare.com/profile/api-tokens" target="_blank" rel="noopener noreferrer">API 令牌</a>，点击创建后使用「编辑区域 DNS」的模板，「区域资源」调整为「账户的所有区域」。创建完令牌后把值暂时保存下来稍后需要使用。</p><h3 id="部署-ddns" tabindex="-1"><a class="header-anchor" href="#部署-ddns"><span>部署 DDNS</span></a></h3><blockquote><p>阅读项目的官方文档了解更多细节：<a href="https://github.com/jeessy2/ddns-go" target="_blank" rel="noopener noreferrer">Github 地址</a></p></blockquote><p>在目录下创建编辑 docker-compose.yml 文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.9&#39;</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">ddns-go</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> jeessy/ddns<span class="token punctuation">-</span>go<span class="token punctuation">:</span>latest</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ddns</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</span>
<span class="line">    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">&quot;host&quot;</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/root</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 9876<span class="token punctuation">:</span><span class="token number">9876</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 ddns 需要读取宿主机的 IP 地址，为了方便这里直接使用 host 模式，此时 ports 没有什么意义，只是为了标记服务使用的端口。</p><p>然后执行 <code>docker-compose up -d</code> 启动服务，执行完成后，在内网浏览器打开 <code>http://[IP]:9876</code>，开始进行配置。</p><h3 id="配置-ddns" tabindex="-1"><a class="header-anchor" href="#配置-ddns"><span>配置 DDNS</span></a></h3><p>DDNS 的配置很简单直观，按照提示登录修改用户后可以按照如下描述进行配置：</p><ol><li>选择对应的 DNS 服务提供商（Cloudflare）。</li><li>填写此前创建出来的 Cloudflare Token。</li><li>启用拥有的公网 IP 类型（这里我选择 IPv6）。</li><li>Domains 中填写要解析的域名，可以写入多个域名，也可以填写通配域名（如 *.example.com 等）。</li><li>Webhook 部分选填，用于通知域名解析的更新结果（域名更新成功或不成功时, 会回调填写的URL）。</li><li>DDNS 的配置不需要频繁改动，将禁止外网访问勾选会更加安全。</li></ol><p>更多的配置细节可以查看 DDNS 的官方文档。</p><p>可以在 Cloudflare 控制台上查看是否已经成功添加 DNS 解析记录。Cloudflare 的 DNS 记录中可以调整代理状态，如果开启代理，则会有 CDN 的效果，更加安全并且支持 IPv4 设备访问到纯 IPv6 的机器上，但是免费订阅的 CDN 节点都在国外，国内访问反而会更慢。如果仅 DNS 不使用代理的话，国内访问一般会更快，但是会暴露原始 IP，可以自己权衡，按照不同的策略调整。</p><p>正确配置完之后就可以通过域名访问到服务器，但域名解析默认访问的是 80 和 443 端口，我们还需要其他服务来进行代理，才能正确通过域名访问到指定服务上，我们将在下一页描述 nginx proxy manager 的配置，它可以提供这项服务。</p>`,23)]))}const r=e(t,[["render",p],["__file","ddns.html.vue"]]),d=JSON.parse('{"path":"/self_host/ddns.html","title":"DDNS","lang":"zh-CN","frontmatter":{"title":"DDNS","description":"DDNS 前言 假如我们现在使用一台本地服务器并部署了一些服务，如果其他客户端和服务器在同一个子网内，可以直接使用内网 IP 直接访问到服务上去。如果我们要想外部访问到本地服务器，这个服务器需要有公网 IP 地址来作为唯一标识。而公网 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 ...","head":[["meta",{"property":"og:url","content":"https://coding.ejoin.cc/self_host/ddns.html"}],["meta",{"property":"og:site_name","content":"Coding 练级宝典"}],["meta",{"property":"og:title","content":"DDNS"}],["meta",{"property":"og:description","content":"DDNS 前言 假如我们现在使用一台本地服务器并部署了一些服务，如果其他客户端和服务器在同一个子网内，可以直接使用内网 IP 直接访问到服务上去。如果我们要想外部访问到本地服务器，这个服务器需要有公网 IP 地址来作为唯一标识。而公网 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-30T05:36:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-30T05:36:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDNS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-30T05:36:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"接入 Cloudflare","slug":"接入-cloudflare","link":"#接入-cloudflare","children":[]},{"level":3,"title":"部署 DDNS","slug":"部署-ddns","link":"#部署-ddns","children":[]},{"level":3,"title":"配置 DDNS","slug":"配置-ddns","link":"#配置-ddns","children":[]}]}],"git":{"updatedTime":1738215408000},"autoDesc":true,"filePathRelative":"self_host/ddns.md"}');export{r as comp,d as data};
