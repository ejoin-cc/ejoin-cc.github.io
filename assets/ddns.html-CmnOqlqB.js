import{_ as n,c as e,b as a,o as t}from"./app-DJY0sTH8.js";const l={};function p(i,s){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="ddns" tabindex="-1"><a class="header-anchor" href="#ddns"><span>DDNS</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>假如我们现在使用一台本地服务器并部署了一些服务，如果我们想要随时随地访问到服务器上的服务，需要一些额外的配置。</p><p>要想外部访问到本地服务器，这个服务器需要有 IP 地址来作为唯一标识。而 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 地址范围很大，一般现在的路由器都支持设备获取公网 IPv6。我们可以将域名解析到服务器的公网 IPv6 上，这样就可以随时随地通过域名访问服务。而服务器上的 IPv6 地址经常会发生变化，如果手动配置域名的解析记录很麻烦，可以使用 DDNS 来完成自动修改域名解析的行为。</p><h2 id="前提" tabindex="-1"><a class="header-anchor" href="#前提"><span>前提</span></a></h2><ol><li>服务器具有 IPv6 公网地址（可以通过桥接光猫，路由器打开 IPv6 开关实现，注意如果需要外网访问的话，需要调整 IPv6 防火墙）。</li><li>拥有一个域名（下面使用阿里云域名，其他域名解析服务提供商配置方式类似）。</li></ol><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="获取-accesskey" tabindex="-1"><a class="header-anchor" href="#获取-accesskey"><span>获取 AccessKey</span></a></h3><p>先登录<a href="https://ram.console.aliyun.com/users" target="_blank" rel="noopener noreferrer">阿里云后台</a>，点击侧边栏中的「用户」。新创建一个 RAM 用户，给新创建的用户添加全部 DNS 操作权限。</p><p>然后回到用户列表页，点击新创建的用户名，创建 AccessKey，记录下创建出来的 AccessKey 和 AccessSecret。</p><h3 id="部署-ddns" tabindex="-1"><a class="header-anchor" href="#部署-ddns"><span>部署 DDNS</span></a></h3><blockquote><p>阅读项目的官方文档了解更多细节：<a href="https://github.com/jeessy2/ddns-go" target="_blank" rel="noopener noreferrer">Github 地址</a></p></blockquote><p>在目录下创建编辑 docker-compose.yml 文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.9&#39;</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">ddns-go</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> jeessy/ddns<span class="token punctuation">-</span>go<span class="token punctuation">:</span>latest</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ddns</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</span>
<span class="line">    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">&quot;host&quot;</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/root</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 9876<span class="token punctuation">:</span><span class="token number">9876</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 ddns 需要读取宿主机的 IP 地址，为了方便这里直接使用 host 模式，此时 ports 没有什么意义，只是为了标记服务使用的端口。</p><p>然后执行 <code>docker-compose up -d</code> 启动服务，执行完成后，在内网浏览器打开 <code>http://[IP]:9876</code>，开始进行配置。</p><h3 id="配置-ddns" tabindex="-1"><a class="header-anchor" href="#配置-ddns"><span>配置 DDNS</span></a></h3><p>DDNS 的配置很简单直观，按照提示登录修改用户后可以按照如下描述进行配置：</p><ol><li>选择对应的域名服务提供商（阿里云）。</li><li>填写 AccessKey。</li><li>启用拥有的公网 IP 类型（这里我选择 IPv6）。</li><li>Domains 中填写要解析的域名，可以写入多个域名，也可以填写通配域名（如 *.example.com 等）。</li><li>Webhook 部分选填，用于通知域名解析的更新结果（域名更新成功或不成功时, 会回调填写的URL）。</li><li>DDNS 的配置不需要频繁改动，将禁止外网访问勾选会更加安全。</li></ol><p>更多的配置细节可以查看 DDNS 的官方文档。</p><p>正确配置完之后就可以通过域名访问到服务器，但域名解析默认访问的是 80 和 443 端口，我们还需要其他服务来进行代理，才能正确通过域名访问到服务上，我们将在下一页描述 nginx proxy manager 的配置，它可以提供这项服务。</p>`,21)]))}const o=n(l,[["render",p],["__file","ddns.html.vue"]]),r=JSON.parse('{"path":"/self_host/ddns.html","title":"DDNS","lang":"zh-CN","frontmatter":{"title":"DDNS","description":"DDNS 前言 假如我们现在使用一台本地服务器并部署了一些服务，如果我们想要随时随地访问到服务器上的服务，需要一些额外的配置。 要想外部访问到本地服务器，这个服务器需要有 IP 地址来作为唯一标识。而 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 地址范围很大，一般现在的路由器都支...","head":[["meta",{"property":"og:url","content":"https://coding.ejoin.cc/self_host/ddns.html"}],["meta",{"property":"og:site_name","content":"Coding 练级宝典"}],["meta",{"property":"og:title","content":"DDNS"}],["meta",{"property":"og:description","content":"DDNS 前言 假如我们现在使用一台本地服务器并部署了一些服务，如果我们想要随时随地访问到服务器上的服务，需要一些额外的配置。 要想外部访问到本地服务器，这个服务器需要有 IP 地址来作为唯一标识。而 IPv4 数目较少，一般家庭内部的设备不能直接获取公网 IPv4，如果想要运行商提供的话，会额外有一些费用。IPv6 地址范围很大，一般现在的路由器都支..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-29T09:24:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-29T09:24:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDNS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-29T09:24:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"获取 AccessKey","slug":"获取-accesskey","link":"#获取-accesskey","children":[]},{"level":3,"title":"部署 DDNS","slug":"部署-ddns","link":"#部署-ddns","children":[]},{"level":3,"title":"配置 DDNS","slug":"配置-ddns","link":"#配置-ddns","children":[]}]}],"git":{"updatedTime":1738142689000},"autoDesc":true,"filePathRelative":"self_host/ddns.md"}');export{o as comp,r as data};
